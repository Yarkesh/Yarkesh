{"version":3,"sources":["component/util/useTitle.jsx","component/pages/ProjectBackLog/style.module.css","component/pages/ProjectBackLog/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useTitle","title","useEffect","document","console","log","module","exports","button_flex","button","tag","tag_flex","usBoxContainer","usBox","usBoxRow","formControll","modalContainer","accept","borderi","Index","props","columns","dataIndex","key","sorter","a","b","storyPoint","filters","text","value","onFilter","record","priority","includes","render","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","Fragment","isEpic","dispatch","useDispatch","_useSelector","useSelector","state","projectStories","shallowEqual","loading","stories","getBacklog","match","params","projectId","className","concat","Style","style","height","overflow","width","margin","antd_es_skeleton__WEBPACK_IMPORTED_MODULE_1__","active","antd_es_table__WEBPACK_IMPORTED_MODULE_0__","rowKey","storyId","expandedRowRender","as","iWant","soThat","dataSource","pagination","position"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GASeC,IAPE,SAAAC,GACfC,oBAAU,WACRC,SAASF,MAAQA,EACjBG,QAAQC,IAAI,SACX,CAACJ,0BCLNK,EAAAC,QAAA,CAAkBC,YAAA,2BAAAC,OAAA,sBAAAC,IAAA,mBAAAC,SAAA,wBAAAC,eAAA,8BAAAC,MAAA,qBAAAC,SAAA,wBAAAC,aAAA,4BAAAC,eAAA,8BAAAC,OAAA,sBAAAC,QAAA,kJCkHHC,UA5GD,SAAAC,GACZ,IAAMC,EAAU,CACd,CACEpB,MAAO,OACPqB,UAAW,YACXC,IAAK,QAEP,CACEtB,MAAO,SACPqB,UAAW,oBACXC,IAAK,UAEP,CACEtB,MAAO,WACPqB,UAAW,wBACXC,IAAK,YAEP,CACEtB,MAAO,cACPqB,UAAW,aACXC,IAAK,aACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,aAErC,CACE1B,MAAO,SACPqB,UAAW,SACXC,IAAK,UAEP,CACEtB,MAAO,WACPqB,UAAW,WACXC,IAAK,WACLK,QAAS,CACP,CAAEC,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,QAASC,MAAO,UAE1BC,SAAU,SAACD,EAAOE,GAAR,OAAmBA,EAAOC,SAASC,SAASJ,KAExD,CACE7B,MAAO,UACPqB,UAAW,SACXC,IAAK,OACLK,QAAS,CAAC,CAAEC,KAAM,QAASC,OAAO,GAAS,CAAED,KAAM,OAAQC,OAAO,IAClEK,OAAQ,SAAAL,GAAK,OAAIM,EAAAX,EAAAY,cAAAD,EAAAX,EAAAa,SAAA,KAAGR,EAAQ,MAAQ,OACpCC,SAAU,SAACD,EAAOE,GAAR,OAAmBA,EAAOO,SAAWT,KAI7CU,EAAWC,cAjDIC,EAkDQC,YAC3B,SAAAC,GAAK,OAAIA,EAAMC,gBACfC,KAFMC,EAlDaL,EAkDbK,QAASC,EAlDIN,EAkDJM,QAWjB,OANA9C,oBAAU,WACRsC,EAASS,YAAW7B,EAAM8B,MAAMC,OAAOC,aAEtC,CAAChC,IACJpB,YAAS,mBAGPoC,EAAAX,EAAAY,cAAAD,EAAAX,EAAAa,SAAA,KACGS,EACCX,EAAAX,EAAAY,cAAAD,EAAAX,EAAAa,SAAA,KACEF,EAAAX,EAAAY,cAAA,OAAKgB,UAAS,GAAAC,OAAKC,IAAM1C,MAAX,MACZuB,EAAAX,EAAAY,cAAA,OACEmB,MAAO,CACLC,OAAQ,QACRC,SAAU,SACVC,MAAO,OACPC,OAAQ,WAGVxB,EAAAX,EAAAY,cAAAwB,EAAA,GAAUC,QAAM,OAKtB1B,EAAAX,EAAAY,cAAA0B,EAAA,GACEC,OAAQ,SAAAhC,GAAM,OAAIA,EAAOiC,SACzB5C,QAASA,EACT6C,kBAAmB,SAAAlC,GAAM,OACvBI,EAAAX,EAAAY,cAAA,OAAKmB,MAAO,CAAEI,OAAQ,IACnB,IACDxB,EAAAX,EAAAY,cAAA,SACG,IACA,MAFH,IAEWL,EAAOmC,IAElB/B,EAAAX,EAAAY,cAAA,SACG,IACA,aAFH,IAEkBL,EAAOoC,OACpB,IACLhC,EAAAX,EAAAY,cAAA,SACG,IACA,YAFH,IAEiBL,EAAOqC,UAI5BC,WAAYtB,EACZuB,WAAY,CAAEC,SAAU","file":"static/js/19.05c5f26e.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useTitle = title => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n    console.log(\"name\");\r\n  }, [title]);\r\n};\r\n\r\nexport default useTitle;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_flex\":\"style_button_flex__3LASD\",\"button\":\"style_button__3oGJm\",\"tag\":\"style_tag__2hMVD\",\"tag_flex\":\"style_tag_flex__mdou2\",\"usBoxContainer\":\"style_usBoxContainer__24N-f\",\"usBox\":\"style_usBox__3N5uA\",\"usBoxRow\":\"style_usBoxRow__274UR\",\"formControll\":\"style_formControll__32vAm\",\"modalContainer\":\"style_modalContainer__1Dm8m\",\"accept\":\"style_accept__IyYNU\",\"borderi\":\"style_borderi__1G9mm\"};","import React, { useEffect } from \"react\";\r\nimport { Skeleton, Table } from \"antd\";\r\nimport Style from \"./style.module.css\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { getBacklog } from \"../../../action/project\";\r\nimport useTitle from \"../../util/useTitle\";\r\n\r\nconst Index = props => {\r\n  const columns = [\r\n    {\r\n      title: \"name\",\r\n      dataIndex: \"storyName\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"sprint\",\r\n      dataIndex: \"sprint.sprintName\",\r\n      key: \"sprint\"\r\n    },\r\n    {\r\n      title: \"activity\",\r\n      dataIndex: \"activity.activityName\",\r\n      key: \"activity\"\r\n    },\r\n    {\r\n      title: \"story point\",\r\n      dataIndex: \"storyPoint\",\r\n      key: \"storyPoint\",\r\n      sorter: (a, b) => a.storyPoint - b.storyPoint\r\n    },\r\n    {\r\n      title: \"status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\"\r\n    },\r\n    {\r\n      title: \"priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      filters: [\r\n        { text: \"must\", value: \"Must\" },\r\n        { text: \"should\", value: \"Should\" },\r\n        { text: \"could\", value: \"Could\" }\r\n      ],\r\n      onFilter: (value, record) => record.priority.includes(value)\r\n    },\r\n    {\r\n      title: \"is epic\",\r\n      dataIndex: \"isEpic\",\r\n      key: \"epic\",\r\n      filters: [{ text: \"false\", value: false }, { text: \"true\", value: true }],\r\n      render: value => <>{value ? \"yes\" : \"no\"}</>,\r\n      onFilter: (value, record) => record.isEpic === value\r\n    }\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, stories } = useSelector(\r\n    state => state.projectStories,\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getBacklog(props.match.params.projectId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n  useTitle(\"project backlog\");\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <div className={`${Style.usBox} `}>\r\n            <div\r\n              style={{\r\n                height: \"120px\",\r\n                overflow: \"hidden\",\r\n                width: \"100%\",\r\n                margin: \"auto 0\"\r\n              }}\r\n            >\r\n              <Skeleton active />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Table\r\n          rowKey={record => record.storyId}\r\n          columns={columns}\r\n          expandedRowRender={record => (\r\n            <div style={{ margin: 0 }}>\r\n              {\" \"}\r\n              <p>\r\n                {\" \"}\r\n                {\"as:\"} {record.as}\r\n              </p>\r\n              <p>\r\n                {\" \"}\r\n                {\"i want to:\"} {record.iWant}\r\n              </p>{\" \"}\r\n              <p>\r\n                {\" \"}\r\n                {\"so that :\"} {record.soThat}\r\n              </p>\r\n            </div>\r\n          )}\r\n          dataSource={stories}\r\n          pagination={{ position: \"top\" }}\r\n          // onChange={handleChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}
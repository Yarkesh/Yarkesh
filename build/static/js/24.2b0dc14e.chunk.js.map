{"version":3,"sources":["component/util/useTitle.jsx","component/pages/ProjectTimeline/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useTitle","title","useEffect","document","console","log","Index","props","_useState","useState","_useState2","Object","I_react_karaFront_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_11__","filtering","setFiltering","dispatch","useDispatch","_useSelector","useSelector","state","timeline","shallowEqual","loading","milestone","sprints","user","auth","getTimeline","match","params","projectId","react__WEBPACK_IMPORTED_MODULE_12___default","a","createElement","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","Fragment","style","height","overflow","width","margin","antd_es_skeleton__WEBPACK_IMPORTED_MODULE_10__","active","display","justifyContent","antd_es_button__WEBPACK_IMPORTED_MODULE_8__","type","onClick","antd_es_timeline__WEBPACK_IMPORTED_MODULE_5__","mode","concat","I_react_karaFront_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__","sort","b","Date","dueDate","map","ms","description","Item","position","key","milestoneId","color","toDateString","sprintId","sprintName","startDate","toLocaleDateString","stories","filter","story","assignedTo","find","item","userId","antd_es_tag__WEBPACK_IMPORTED_MODULE_3__","storyId","storyName"],"mappings":"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","file":"static/js/24.2b0dc14e.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useTitle = title => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n    console.log(\"name\");\r\n  }, [title]);\r\n};\r\n\r\nexport default useTitle;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Skeleton, Timeline, Tag, Button, Card } from \"antd\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { getTimeline } from \"../../../action/project\";\r\nimport useTitle from \"../../util/useTitle\";\r\nconst Index = props => {\r\n  useTitle(\"project timeline\");\r\n  const [filtering, setFiltering] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, milestone, sprints } = useSelector(\r\n    state => state.timeline,\r\n    shallowEqual\r\n  );\r\n  const { user } = useSelector(state => state.auth, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTimeline(props.match.params.projectId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.match.params.projectId]);\r\n\r\n  return (\r\n    <Card>\r\n      {loading === 0 ? (\r\n        <>\r\n          <div>\r\n            <div\r\n              style={{\r\n                height: \"120px\",\r\n                overflow: \"hidden\",\r\n                width: \"100%\",\r\n                margin: \"auto 0\"\r\n              }}\r\n            >\r\n              <Skeleton active />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n          <div style={{ margin: \"0 auto\" }}>\r\n            <div\r\n              style={{\r\n                margin: \"10px  auto\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\"\r\n              }}\r\n            >\r\n              <Button\r\n                type={!filtering ? \"primary\" : \"normal\"}\r\n                onClick={() => setFiltering(false)}\r\n              >\r\n                {\" \"}\r\n                all work\r\n            </Button>\r\n              <span style={{ margin: \"10px\" }}></span>\r\n              <Button\r\n                type={filtering ? \"primary\" : \"normal\"}\r\n                onClick={() => setFiltering(true)}\r\n              >\r\n                {\" \"}\r\n                my work\r\n            </Button>\r\n            </div>\r\n            <Timeline style={{ margin: \"0 auto\" }} mode=\"alternate\">\r\n              {[...milestone, ...sprints]\r\n                .sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate))\r\n                .map(ms =>\r\n                  ms.description ? (\r\n                    <Timeline.Item\r\n                      position=\"right\"\r\n                      key={\"mile\" + ms.milestoneId}\r\n                      color=\"red\"\r\n                    >\r\n                      {ms.description} {\"  at \"}\r\n                      <b>{new Date(ms.dueDate).toDateString()}</b>\r\n                    </Timeline.Item>\r\n                  ) : (\r\n                      <Timeline.Item position=\"left\" key={\"sprint\" + ms.sprintId}>\r\n                        <h3> {ms.sprintName}</h3>\r\n                        <div>\r\n                          <h5>\r\n                            <div>\r\n                              start :\r\n                          <b>{new Date(ms.startDate).toLocaleDateString()}</b>\r\n                            </div>\r\n                            <div>\r\n                              {\"end     :\"}\r\n                              <b>{new Date(ms.dueDate).toLocaleDateString()}</b>\r\n                            </div>\r\n                          </h5>\r\n                          {filtering\r\n                            ? ms.stories\r\n                              .filter(\r\n                                story =>\r\n                                  story.assignedTo &&\r\n                                  story.assignedTo.find(\r\n                                    item => item.userId === user.userId\r\n                                  )\r\n                              )\r\n                              .map(story => (\r\n                                <Tag\r\n                                  key={story.storyId}\r\n                                  style={{ margin: \"4px\" }}\r\n                                  color=\"cyan\"\r\n                                >\r\n                                  {story.storyName}\r\n                                </Tag>\r\n                              ))\r\n                            : ms.stories.map(story => (\r\n                              <Tag\r\n                                key={story.storyId}\r\n                                style={{ margin: \"4px\" }}\r\n                                color=\"cyan\"\r\n                              >\r\n                                {story.storyName}\r\n                              </Tag>\r\n                            ))}\r\n                        </div>\r\n                      </Timeline.Item>\r\n                    )\r\n                )}\r\n            </Timeline>\r\n          </div>\r\n        )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}
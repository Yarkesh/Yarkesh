{"version":3,"sources":["component/pages/PeojectDetails/style.module.css","component/pages/ProjectStoryDetail/index.jsx"],"names":["module","exports","button_flex","button","tag","tag_flex","usBoxContainer","hoverCard","usBox","usBoxRow","formControll","modalContainer","accept","borderi","Option","CreateModal","props","_useState","useState","_useState2","Object","_home_sina_code_react_karaFront_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_17__","_useState3","_useState4","name","setName","_useState5","_useState6","who","setWho","_useState7","_useState8","what","setWhat","_useState9","_useState10","why","setWhy","_useState11","_useState12","act","setAct","_useState13","_useState14","sprint","setSprint","_useState15","_useState16","setUnValidForm","_useState17","_useState18","acceptText","setAcceptText","_useState19","_useState20","acceptData","setAcceptData","_useState21","_useState22","priority","setPriority","_useState23","_useState24","isEpic","setIsEpic","_useState25","_useState26","dependency","setSelectedDependency","_useState27","_useState28","assignment","setAssignment","_useState29","_useState30","storyPoint","setStoryPoint","_useState31","_useState32","setStoryId","dispatch","useDispatch","_useSelector","useSelector","state","projectStories","shallowEqual","loading","stories","selectedStory","members","useCallback","deselectStory","projectDetail","auth","projectMember","_useSelector3","sprintActivity","activities","sprints","useEffect","storyId","setVisible","storyName","as","iWant","soThat","acceptanceTest","activityId","sprintId","addAccept","length","data","test","checked","allData","concat","_home_sina_code_react_karaFront_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__","projectId","react__WEBPACK_IMPORTED_MODULE_22___default","a","createElement","antd_es_row__WEBPACK_IMPORTED_MODULE_7__","style","justifyContent","display","flexWrap","antd_es_col__WEBPACK_IMPORTED_MODULE_9__","md","xs","marginTop","className","Style","htmlFor","antd_es_input__WEBPACK_IMPORTED_MODULE_15__","onChange","e","target","value","placeholder","id","TextArea","autosize","minRows","maxRows","onKeyDown","keyCode","suffix","antd_es_icon__WEBPACK_IMPORTED_MODULE_13__","type","onClick","color","map","item","index","key","span","marginBottom","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_11__","textDecoration","newAllData","itemIndex","findIndex","acceptItem","checkButtonClick","filter","deleteButtonClick","Fragment","margin","antd_es_input_number__WEBPACK_IMPORTED_MODULE_5__","width","max","min","defaultValue","antd_es_select__WEBPACK_IMPORTED_MODULE_19__","disabled","antd_es_badge__WEBPACK_IMPORTED_MODULE_3__","status","text","activity","activityName","spr","sprintName","float","marginRight","antd_es_switch__WEBPACK_IMPORTED_MODULE_1__","checkedChildren","unCheckedChildren","defaultChecked","mode","o","includes","user","userId"],"mappings":"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","file":"static/js/23.1d9043f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_flex\":\"style_button_flex__YKWMQ\",\"button\":\"style_button__1oBEt\",\"tag\":\"style_tag__15uHH\",\"tag_flex\":\"style_tag_flex__UiEGo\",\"usBoxContainer\":\"style_usBoxContainer__2jKMw\",\"hoverCard\":\"style_hoverCard__1AM34\",\"usBox\":\"style_usBox__2UV3d\",\"usBoxRow\":\"style_usBoxRow__2Ud5Z\",\"formControll\":\"style_formControll__2gDam\",\"modalContainer\":\"style_modalContainer__11_TM\",\"accept\":\"style_accept__QlmP0\",\"borderi\":\"style_borderi__2p1O9\"};","import {\n  Modal,\n  Checkbox,\n  Button,\n  Col,\n  Row,\n  Icon,\n  Input,\n  Badge,\n  InputNumber,\n  Switch,\n  Select\n} from \"antd\";\n\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport Style from \"../PeojectDetails/style.module.css\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { addStory, deselectStory, updateStory } from \"../../../action/project\";\nconst { Option } = Select;\nconst CreateModal = props => {\n  const [formloading, setLoading] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n  const [what, setWhat] = useState(\"\");\n  const [why, setWhy] = useState(\"\");\n  const [act, setAct] = useState();\n  const [sprint, setSprint] = useState();\n  const [unvalidForm, setUnValidForm] = useState(false);\n  const [acceptText, setAcceptText] = useState(\"\");\n  const [acceptData, setAcceptData] = useState([]);\n  const [priority, setPriority] = useState(\"\");\n  const [isEpic, setIsEpic] = useState(false);\n  const [dependency, setSelectedDependency] = useState([]);\n  const [assignment, setAssignment] = useState([]);\n  const [storyPoint, setStoryPoint] = useState(1);\n  const [storyId, setStoryId] = useState();\n\n  const dispatch = useDispatch();\n  const { loading, stories, selectedStory } = useSelector(\n    state => state.projectStories,\n    shallowEqual\n  );\n\n  const deseletStoryCallback = useCallback(\n    () => dispatch(deselectStory()),\n    // eslint-disable-next-line\n    []\n  );\n  const detail = useSelector(state => state.projectDetail, shallowEqual);\n  const auth = useSelector(state => state.auth, shallowEqual);\n\n  const { members } = useSelector(state => state.projectMember, shallowEqual);\n\n  const { activities, sprints } = useSelector(\n    state => state.sprintActivity,\n    shallowEqual\n  );\n\n  const canEditStory = () => {\n    if (\n      (detail.projectInfo &&\n        detail.projectInfo.creatorId === auth.user.userId) ||\n      (selectedStory.assignment &&\n        selectedStory.assignment.includes(auth.user.userId))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (selectedStory.storyId) {\n      props.setVisible(true);\n      setName(selectedStory.storyName || \" \");\n      setWho(selectedStory.as || \" \");\n      setWhat(selectedStory.iWant || \" \");\n      setWhy(selectedStory.soThat || \" \");\n      setAcceptData(selectedStory.acceptanceTest || []);\n      setStoryPoint(selectedStory.storyPoint);\n      setPriority(selectedStory.priority || \"\");\n      setIsEpic(selectedStory.isEpic);\n      setAct(selectedStory.activityId);\n      setSprint(selectedStory.sprintId);\n      setStoryId(selectedStory.storyId);\n      setAssignment(selectedStory.assignment);\n      setSelectedDependency(selectedStory.dependency);\n    }\n    // eslint-disable-next-line\n  }, [selectedStory]);\n\n  const cancelModal = () => {\n    setName(\"\");\n    setWho(\"\");\n    setWhat(\"\");\n    setWhy(\"\");\n    setAct();\n    setSprint();\n    setUnValidForm(false);\n    setAcceptText(\"\");\n    setAcceptData([]);\n    setPriority(\"\");\n    setIsEpic(false);\n    setSelectedDependency([]);\n    setAssignment([]);\n    setStoryPoint(1);\n    setStoryId(null);\n    deseletStoryCallback();\n    props.setVisible(false);\n  };\n\n  const addAccept = () => {\n    if (acceptText.length) {\n      const data = {\n        test: acceptText,\n        checked: false\n      };\n      setAcceptData(allData => [...allData, data]);\n      setAcceptText(\"\");\n    }\n  };\n  const enterPress = e => {\n    if (e.keyCode === 13) {\n      addAccept();\n    }\n  };\n\n  const checkButtonClick = item => {\n    let newAllData = [...acceptData];\n    const itemIndex = newAllData.findIndex(acceptItem => acceptItem === item);\n    if (itemIndex !== -1) {\n      newAllData[itemIndex].checked = !newAllData[itemIndex].checked;\n    }\n    setAcceptData(newAllData);\n  };\n\n  const deleteButtonClick = item => {\n    const newAllData = acceptData.filter(acceptItem => acceptItem !== item);\n    setAcceptData(newAllData);\n  };\n\n  const handleOk = () => {\n    setLoading(true);\n    const data = {\n      projectId: props.projectId,\n      storyName: name,\n      as: who,\n      iWant: what,\n      soThat: why,\n      storyPoint: storyPoint,\n      priority: priority,\n      acceptanceTest: acceptData,\n      dependency: dependency,\n      isEpic: isEpic,\n      activityId: act,\n      sprintId: sprint,\n      assignment: assignment,\n      storyId: storyId\n    };\n    if (storyId) {\n      dispatch(updateStory(data));\n    } else {\n      dispatch(addStory(data));\n    }\n\n    setName(\"\");\n    setWho(\"\");\n    setWhat(\"\");\n    setWhy(\"\");\n    setAct();\n    setSprint();\n    setUnValidForm(false);\n    setAcceptText(\"\");\n    setAcceptData([]);\n    setPriority(\"\");\n    setIsEpic(false);\n    setSelectedDependency([]);\n    setAssignment([]);\n    setStoryPoint(1);\n    setStoryId(null);\n\n    deseletStoryCallback();\n\n    setLoading(false);\n    props.setVisible(false);\n  };\n\n  useEffect(() => {\n    if (\n      who.length >= 2 &&\n      what.length >= 2 &&\n      why.length >= 2 &&\n      name.length >= 2\n    ) {\n      setUnValidForm(false);\n    } else {\n      setUnValidForm(true);\n    }\n  }, [who, what, why, name, props.projectId]);\n\n  return (\n    // <Modal\n    //   className={Style.modalContainer}\n    //   bodyStyle={{\n    //     minWidth: \"300px\"\n    //   }}\n    //   visible={props.visible}\n    //  // title=\"Create Project\"\n    //   onCancel={cancelModal}\n    //   footer={[\n    //     <Button key=\"back\" onClick={() => cancelModal()}>\n    //       Cancel\n    //     </Button>,\n    //     canEditStory() &&\n    //       (storyId ? (\n    //         <Button\n    //           disabled={unvalidForm}\n    //           key=\"submit\"\n    //           type=\"primary\"\n    //           loading={formloading}\n    //           onClick={handleOk}\n    //         >\n    //           Update User Story\n    //         </Button>\n    //       ) : (\n    //         <Button\n    //           disabled={unvalidForm}\n    //           key=\"submit\"\n    //           type=\"primary\"\n    //           loading={formloading}\n    //           onClick={handleOk}\n    //         >\n    //           Create User Story\n    //         </Button>\n    //       ))\n    //   ]}\n    // >\n\n    <Row\n      style={{\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      }}\n    >\n      <Col md={14} xs={24} style={{ marginTop: \"8px\" }}>\n        <div className={`${Style.formControll}`}>\n          <label htmlFor=\"name\">name:</label>\n          <Input\n            onChange={e => setName(e.target.value)}\n            placeholder=\"name of user story\"\n            id=\"name\"\n            value={name}\n          />\n        </div>\n        <div className={`${Style.formControll}`}>\n          <label htmlFor=\"who\">as :</label>\n          <Input\n            onChange={e => setWho(e.target.value)}\n            placeholder=\"who want to do this\"\n            id=\"who\"\n            value={who}\n          />\n        </div>\n        <div className={`${Style.formControll}`}>\n          <label htmlFor=\"what\">i want:</label>\n          <Input\n            onChange={e => setWhat(e.target.value)}\n            placeholder=\"what you want to do\"\n            id=\"what\"\n            value={what}\n          />\n        </div>\n        <div className={`${Style.formControll}`}>\n          <label htmlFor=\"why\">so that:</label>\n          <Input.TextArea\n            value={why}\n            onChange={e => setWhy(e.target.value)}\n            placeholder=\"why you want to do this\"\n            autosize={{ minRows: 2, maxRows: 6 }}\n            id=\"why\"\n          />\n        </div>\n        <div className={`${Style.formControll}`}>\n          <label htmlFor=\"which\">acceptance criteria:</label>\n          <Input\n            placeholder=\"by which condition do this\"\n            id=\"which\"\n            onKeyDown={enterPress}\n            value={acceptText}\n            onChange={e => setAcceptText(e.target.value)}\n            suffix={\n              <Icon\n                type=\"plus-circle\"\n                onClick={addAccept}\n                style={{ color: \"rgba(0,0,0,.45)\" }}\n              />\n            }\n          />\n        </div>\n        {acceptData.length ? (\n          <Row>\n            {acceptData.map((item, index) => (\n              <Col\n                key={index}\n                span={24}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"4px\",\n                  marginTop: \"4px\"\n                }}\n              >\n                <Checkbox\n                  style={{\n                    textDecoration: item.checked ? \"line-through\" : \"none\",\n                    color: item.checked ? \"gray\" : \"black\"\n                  }}\n                  onChange={() => checkButtonClick(item)}\n                  checked={item.checked ? true : false}\n                >\n                  {item.test}\n                </Checkbox>\n                <Icon type=\"delete\" onClick={() => deleteButtonClick(item)} />\n              </Col>\n            ))}\n          </Row>\n        ) : (\n            <></>\n          )}\n      </Col>\n      <Col md={8} xs={16} style={{ margin: \"0 auto\" }}>\n        <div style={{ margin: \"16px\" }}>\n          <label htmlFor=\"storyPoint: \">story point {\"   \"}</label>\n          <InputNumber\n            id=\"storyPoint\"\n            style={{\n              width: \"60px\"\n            }}\n            max={40}\n            min={1}\n            value={storyPoint}\n            defaultValue={storyPoint}\n            onChange={setStoryPoint}\n          />\n        </div>\n        <div style={{ margin: \"16px\" }}>\n          <Select\n            value={priority || \"Could\"}\n            // placeholder=\"select project priorty\"\n            style={{ width: \"100%\" }}\n            onChange={value => setPriority(value)}\n          >\n            <Option value=\"disabled\" disabled>\n              Select Priority\n            </Option>\n            <Option value=\"Could\">\n              {\" \"}\n              <Badge status=\"success\" text=\"Could\" />\n            </Option>\n            <Option value=\"Should\">\n              <Badge status=\"default\" text=\"Should\" />\n            </Option>\n            <Option value=\"Must\">\n              <Badge status=\"error\" text=\"Must\" />\n            </Option>\n          </Select>\n        </div>{\" \"}\n        <div style={{ margin: \"16px\" }}>\n          <Select\n            placeholder=\"select activty\"\n            style={{ width: \"100%\" }}\n            value={act}\n            onChange={value => setAct(value)}\n          >\n            <Option value=\"disabled\" disabled>\n              selecte activity\n            </Option>\n\n            {activities.map(activity => (\n              <Option value={activity.activityId} key={activity.activityId}>\n                {\" \"}\n                <Badge status=\"default\" text={activity.activityName} />\n              </Option>\n            ))}\n          </Select>\n        </div>{\" \"}\n        <div style={{ margin: \"16px\" }}>\n          <Select\n            placeholder=\"select sprint\"\n            style={{ width: \"100%\" }}\n            value={sprint}\n            onChange={value => setSprint(value)}\n          >\n            <Option value=\"disabled\" disabled>\n              selecte sprint\n            </Option>\n\n            {sprints.map(spr => (\n              <Option value={spr.sprintId} key={spr.sprintId}>\n                {\" \"}\n                <Badge status=\"default\" text={spr.sprintName} />\n              </Option>\n            ))}\n          </Select>\n        </div>{\" \"}\n        <div style={{ margin: \"16px\" }}>\n          <h4 style={{ float: \"left\", marginRight: \"16px\" }}>Is Epic:</h4>\n          <Switch\n            checked={isEpic}\n            onChange={(checked, e) => setIsEpic(checked)}\n            checkedChildren={<Icon type=\"check\" />}\n            unCheckedChildren={<Icon type=\"close\" />}\n            defaultChecked\n          />\n        </div>{\" \"}\n        <div style={{ margin: \"16px\" }}>\n          <Select\n            loading={loading}\n            mode=\"multiple\"\n            placeholder=\"select prerequisite of project\"\n            onChange={value => setSelectedDependency(value)}\n            style={{ width: \"100%\" }}\n            value={dependency}\n          >\n            {stories\n              .filter(o => !dependency.includes(o.storyId))\n              .map(item => (\n                <Option key={item.storyId} value={item.storyId}>\n                  <Badge status=\"default\" text={item.storyName} />\n                </Option>\n              ))}\n          </Select>\n        </div>\n        <div style={{ margin: \"16px\" }}>\n          <Select\n            // loading={loading}\n            mode=\"multiple\"\n            placeholder=\"assign to members\"\n            onChange={value => setAssignment(value)}\n            style={{ width: \"100%\" }}\n            value={assignment}\n          >\n            {members\n              .filter(o => !assignment.includes(o.user.userId))\n              .map(item => (\n                <Option key={item.user.userId} value={item.user.userId}>\n                  <Badge status=\"default\" text={item.user.name} />\n                </Option>\n              ))}\n          </Select>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CreateModal;\n"],"sourceRoot":""}
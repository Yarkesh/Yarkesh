{"version":3,"sources":["component/util/useTitle.jsx","component/pages/ProjectTimeline/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useTitle","title","useEffect","document","console","log","Index","props","_useState","useState","_useState2","Object","F_React_karayar_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","filtering","setFiltering","dispatch","useDispatch","_useSelector","useSelector","state","timeline","shallowEqual","loading","milestone","sprints","user","auth","getTimeline","match","params","projectId","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","style","height","overflow","width","margin","antd_es_skeleton__WEBPACK_IMPORTED_MODULE_4__","active","display","justifyContent","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","type","onClick","antd_es_timeline__WEBPACK_IMPORTED_MODULE_1__","mode","concat","F_React_karayar_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","sort","b","Date","dueDate","map","ms","description","Item","position","key","milestoneId","color","toDateString","sprintId","sprintName","startDate","toLocaleDateString","stories","filter","story","member","find","item","userId","antd_es_tag__WEBPACK_IMPORTED_MODULE_0__","storyId","storyName"],"mappings":"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","file":"static/js/26.3f7ea1ee.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useTitle = title => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n    console.log(\"name\");\r\n  }, [title]);\r\n};\r\n\r\nexport default useTitle;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Skeleton, Timeline, Tag, Button } from \"antd\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { getTimeline } from \"../../../action/project\";\r\nimport useTitle from \"../../util/useTitle\";\r\nconst Index = props => {\r\n  useTitle(\"project timeline\");\r\n  const [filtering, setFiltering] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, milestone, sprints } = useSelector(\r\n    state => state.timeline,\r\n    shallowEqual\r\n  );\r\n  const { user } = useSelector(state => state.auth, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTimeline(props.match.params.projectId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.match.params.projectId]);\r\n\r\n  return (\r\n    <>\r\n      {loading === 0 ? (\r\n        <>\r\n          <div>\r\n            <div\r\n              style={{\r\n                height: \"120px\",\r\n                overflow: \"hidden\",\r\n                width: \"100%\",\r\n                margin: \"auto 0\"\r\n              }}\r\n            >\r\n              <Skeleton active />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div style={{ margin: \"0 auto\" }}>\r\n          <div\r\n            style={{\r\n              margin: \"10px  auto\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Button\r\n              type={!filtering ? \"primary\" : \"normal\"}\r\n              onClick={() => setFiltering(false)}\r\n            >\r\n              {\" \"}\r\n              all work\r\n            </Button>\r\n            <span style={{ margin: \"10px\" }}></span>\r\n            <Button\r\n              type={filtering ? \"primary\" : \"normal\"}\r\n              onClick={() => setFiltering(true)}\r\n            >\r\n              {\" \"}\r\n              my work\r\n            </Button>\r\n          </div>\r\n          <Timeline style={{ margin: \"0 auto\" }} mode=\"alternate\">\r\n            {[...milestone, ...sprints]\r\n              .sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate))\r\n              .map(ms =>\r\n                ms.description ? (\r\n                  <Timeline.Item\r\n                    position=\"right\"\r\n                    key={\"mile\" + ms.milestoneId}\r\n                    color=\"red\"\r\n                  >\r\n                    {ms.description} {\"  at \"}\r\n                    <b>{new Date(ms.dueDate).toDateString()}</b>\r\n                  </Timeline.Item>\r\n                ) : (\r\n                  <Timeline.Item position=\"left\" key={\"sprint\" + ms.sprintId}>\r\n                    <h3> {ms.sprintName}</h3>\r\n                    <div>\r\n                      <h5>\r\n                        <div>\r\n                          start :\r\n                          <b>{new Date(ms.startDate).toLocaleDateString()}</b>\r\n                        </div>\r\n                        <div>\r\n                          {\"end     :\"}\r\n                          <b>{new Date(ms.dueDate).toLocaleDateString()}</b>\r\n                        </div>\r\n                      </h5>\r\n                      {filtering\r\n                        ? ms.stories\r\n                            .filter(\r\n                              story =>\r\n                                story.member &&\r\n                                story.member.find(\r\n                                  item => item.userId === user.userId\r\n                                )\r\n                            )\r\n                            .map(story => (\r\n                              <Tag\r\n                                key={story.storyId}\r\n                                style={{ margin: \"4px\" }}\r\n                                color=\"cyan\"\r\n                              >\r\n                                {story.storyName}\r\n                              </Tag>\r\n                            ))\r\n                        : ms.stories.map(story => (\r\n                            <Tag\r\n                              key={story.storyId}\r\n                              style={{ margin: \"4px\" }}\r\n                              color=\"cyan\"\r\n                            >\r\n                              {story.storyName}\r\n                            </Tag>\r\n                          ))}\r\n                    </div>\r\n                  </Timeline.Item>\r\n                )\r\n              )}\r\n          </Timeline>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}